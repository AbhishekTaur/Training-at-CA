
package wstest2;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StringMathWebService", targetNamespace = "http://wstest2/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StringMathWebService {


    /**
     * 
     * @param string1
     * @param string2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "concat", targetNamespace = "")
    @RequestWrapper(localName = "concatString", targetNamespace = "http://wstest2/", className = "wstest2.ConcatString")
    @ResponseWrapper(localName = "concatStringResponse", targetNamespace = "http://wstest2/", className = "wstest2.ConcatStringResponse")
    @Action(input = "http://wstest2/StringMathWebService/concatStringRequest", output = "http://wstest2/StringMathWebService/concatStringResponse")
    public String concatString(
        @WebParam(name = "String1", targetNamespace = "")
        String string1,
        @WebParam(name = "String2", targetNamespace = "")
        String string2);

    /**
     * 
     * @param input
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "upper", targetNamespace = "")
    @RequestWrapper(localName = "upperString", targetNamespace = "http://wstest2/", className = "wstest2.UpperString")
    @ResponseWrapper(localName = "upperStringResponse", targetNamespace = "http://wstest2/", className = "wstest2.UpperStringResponse")
    @Action(input = "http://wstest2/StringMathWebService/upperStringRequest", output = "http://wstest2/StringMathWebService/upperStringResponse")
    public String upperString(
        @WebParam(name = "input", targetNamespace = "")
        String input);

    /**
     * 
     * @param number3
     * @param number1
     * @param number2
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(name = "largest", targetNamespace = "")
    @RequestWrapper(localName = "highestNumber", targetNamespace = "http://wstest2/", className = "wstest2.HighestNumber")
    @ResponseWrapper(localName = "highestNumberResponse", targetNamespace = "http://wstest2/", className = "wstest2.HighestNumberResponse")
    @Action(input = "http://wstest2/StringMathWebService/highestNumberRequest", output = "http://wstest2/StringMathWebService/highestNumberResponse")
    public Integer highestNumber(
        @WebParam(name = "number1", targetNamespace = "")
        int number1,
        @WebParam(name = "number2", targetNamespace = "")
        int number2,
        @WebParam(name = "number3", targetNamespace = "")
        int number3);

}
